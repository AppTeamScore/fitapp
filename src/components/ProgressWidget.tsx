import { useState, useEffect } from 'react';
import { TrendingUp, Target, Clock, Calendar, Award, Dumbbell} from 'lucide-react';
import { Card, CardContent } from './ui/card';
import { Progress } from './ui/progress';
import { Badge } from './ui/badge';
import { eventBus } from '../utils/events';
import { logger } from '../utils/logger';
import { projectId } from '../utils/supabase/info';
import { supabase } from '../utils/supabase/client';

interface ProgressWidgetProps {
  className?: string;
}

interface QuickStats {
  weeklyWorkouts: number;
  weeklyGoal: number;
  totalMinutes: number;
  streak: number;
  monthlyProgress: number;
}

export function ProgressWidget({ className = '' }: ProgressWidgetProps) {
  const [stats, setStats] = useState<QuickStats>({
    weeklyWorkouts: 0,
    weeklyGoal: 5,
    totalMinutes: 0,
    streak: 0,
    monthlyProgress: 0
  });
  const [planData, setPlanData] = useState<any>(null);
  const [isLoadingPlan, setIsLoadingPlan] = useState(true);

  useEffect(() => {
    loadQuickStats();
    loadWorkoutPlan();
    
    // –ü–æ–¥–ø–∏—Å—ã–≤–∞–µ–º—Å—è –Ω–∞ —Å–æ–±—ã—Ç–∏–µ –æ—á–∏—Å—Ç–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    const unsubscribeStatsCleared = eventBus.on('stats:cleared', () => {
      logger.info('ProgressWidget: –ü–æ–ª—É—á–µ–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ—á–∏—Å—Ç–∫–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏, –æ–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ');
      loadQuickStats();
    });
    
    return () => {
      unsubscribeStatsCleared();
    };
  }, []);

  const loadQuickStats = () => {
    // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ localStorage
    const completedWorkouts = JSON.parse(localStorage.getItem('completedWorkouts') || '[]');
    const today = new Date();
    const weekAgo = new Date(today.getTime() - 7 * 24 * 60 * 60 * 1000);
    const monthAgo = new Date(today.getTime() - 30 * 24 * 60 * 60 * 1000);

    // –ü–æ–¥—Å—á–µ—Ç —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ –∑–∞ –Ω–µ–¥–µ–ª—é
    const weeklyWorkouts = completedWorkouts.filter((workout: any) => {
      const workoutDate = new Date(workout.date);
      return workoutDate >= weekAgo && workoutDate <= today;
    }).length;

    // –ü–æ–¥—Å—á–µ—Ç —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ –∑–∞ –º–µ—Å—è—Ü
    const monthlyWorkouts = completedWorkouts.filter((workout: any) => {
      const workoutDate = new Date(workout.date);
      return workoutDate >= monthAgo && workoutDate <= today;
    }).length;

    // –û–±—â–µ–µ –≤—Ä–µ–º—è (–ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º 45 –º–∏–Ω –Ω–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É)
    const totalMinutes = weeklyWorkouts * 45;

    // –ü–æ–¥—Å—á–µ—Ç —Å—Ç—Ä–∏–∫–∞
    let streak = 0;
    const sortedWorkouts = completedWorkouts
      .map((w: any) => new Date(w.date))
      .sort((a: Date, b: Date) => b.getTime() - a.getTime());

    if (sortedWorkouts.length > 0) {
      const lastWorkout = sortedWorkouts[0];
      const diffDays = Math.floor((today.getTime() - lastWorkout.getTime()) / (1000 * 60 * 60 * 24));
      
      if (diffDays <= 1) {
        streak = 1;
        for (let i = 1; i < sortedWorkouts.length; i++) {
          const currentWorkout = sortedWorkouts[i];
          const prevWorkout = sortedWorkouts[i - 1];
          const daysDiff = Math.floor((prevWorkout.getTime() - currentWorkout.getTime()) / (1000 * 60 * 60 * 24));
          
          if (daysDiff === 1) {
            streak++;
          } else {
            break;
          }
        }
      }
    }

    // –ü—Ä–æ–≥—Ä–µ—Å—Å –º–µ—Å—è—Ü–∞ (—Ü–µ–ª—å: 12 —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ –≤ –º–µ—Å—è—Ü)
    const monthlyProgress = Math.min((monthlyWorkouts / 12) * 100, 100);

    setStats({
      weeklyWorkouts,
      weeklyGoal: 5, // –í—Ä–µ–º–µ–Ω–Ω–æ, –±—É–¥–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–æ –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–ª–∞–Ω–∞
      totalMinutes,
      streak,
      monthlyProgress
    });
  };

  const loadWorkoutPlan = async () => {
    try {
      const { data: { session } } = await supabase.auth.getSession();
      
      if (!session?.access_token) {
        setIsLoadingPlan(false);
        return;
      }

      const response = await fetch(`https://${projectId}.supabase.co/functions/v1/make-server-c6c9ad1a/workout-plan`, {
        headers: {
          'Authorization': `Bearer ${session.access_token}`
        }
      });

      const result = await response.json();
      
      if (response.ok && result.planData) {
        setPlanData(result.planData);
        
        // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ—á–Ω—ã—Ö –¥–Ω–µ–π –≤ –ø–ª–∞–Ω–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        const trainingDaysInPlan = result.planData.plan?.weekPlan?.filter((day: any) =>
          day.exercises && day.exercises.length > 0
        ).length || 0;
        
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ—á–Ω—ã—Ö –¥–Ω–µ–π –≤ –ø–ª–∞–Ω–µ –∫–∞–∫ —Ü–µ–ª—å –Ω–µ–¥–µ–ª–∏, –Ω–æ –Ω–µ –º–µ–Ω–µ–µ 3
        const weeklyGoal = trainingDaysInPlan > 0 ? Math.max(3, trainingDaysInPlan) : 5;
        
        // –û–±–Ω–æ–≤–ª—è–µ–º stats —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —Ü–µ–ª—å—é –Ω–µ–¥–µ–ª–∏
        setStats(prev => ({
          ...prev,
          weeklyGoal
        }));
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–ª–∞–Ω–∞:', error);
    } finally {
      setIsLoadingPlan(false);
    }
  };

  const weeklyProgress = Math.min((stats.weeklyWorkouts / stats.weeklyGoal) * 100, 100);
  const isWeeklyGoalReached = stats.weeklyWorkouts >= stats.weeklyGoal;

  return (
    <Card className={`overflow-hidden ${className}`}>
      <CardContent className="p-4 space-y-4">
        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
        <div className="flex items-center justify-between">
          <h3 className="font-semibold">–ú–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å</h3>
          {isWeeklyGoalReached && (
            <Badge className="bg-green-100 text-green-800 gap-1">
              <Award className="w-3 h-3" />
              –¶–µ–ª—å –¥–æ—Å—Ç–∏–≥–Ω—É—Ç–∞!
            </Badge>
          )}
        </div>

        {/* –ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω–∞—è —Ü–µ–ª—å */}
        <div className="space-y-2">
          <div className="flex items-center justify-between text-sm">
            <div className="flex items-center gap-2">
              <Target className="w-4 h-4 text-primary" />
              <span>–¶–µ–ª—å –Ω–µ–¥–µ–ª–∏</span>
            </div>
            <span className="font-medium">{stats.weeklyWorkouts}/{stats.weeklyGoal}</span>
          </div>
          <Progress 
            value={weeklyProgress} 
            className={`h-2 ${isWeeklyGoalReached ? 'bg-green-100' : ''}`} 
          />
          <div className="text-xs text-muted-foreground text-right">
            {Math.round(weeklyProgress)}% –≤—ã–ø–æ–ª–Ω–µ–Ω–æ
          </div>
        </div>

        {/* –ú–∏–Ω–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
        <div className="grid grid-cols-3 gap-4 pt-2 border-t border-border/50">
          <div className="text-center">
            <div className="flex items-center justify-center mb-1">
              <Dumbbell className="w-4 h-4 text-blue-500" />
            </div>
            <div className="text-lg font-bold text-blue-600">{stats.weeklyWorkouts}</div>
            <div className="text-xs text-muted-foreground">–¢—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ –≤ –Ω–µ–¥–µ–ª—é</div>
          </div>
          
          <div className="text-center">
            <div className="flex items-center justify-center mb-1">
              <TrendingUp className="w-4 h-4 text-orange-500" />
            </div>
            <div className="text-lg font-bold text-orange-600">{stats.streak}</div>
            <div className="text-xs text-muted-foreground">–¥–Ω–µ–π –ø–æ–¥—Ä—è–¥</div>
          </div>
          
          <div className="text-center">
            <div className="flex items-center justify-center mb-1">
              <Calendar className="w-4 h-4 text-green-500" />
            </div>
            <div className="text-lg font-bold text-green-600">{Math.round(stats.monthlyProgress)}%</div>
            <div className="text-xs text-muted-foreground">–º–µ—Å—è—Ü</div>
          </div>
        </div>

        {/* –ú–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ */}
        <div className="bg-primary/5 rounded-lg p-3 text-center">
          <p className="text-sm text-primary font-medium">
            {stats.weeklyWorkouts === 0 
              ? "–ù–∞—á–Ω–∏ –Ω–æ–≤—É—é –Ω–µ–¥–µ–ª—é —Å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏!" 
              : stats.weeklyWorkouts < stats.weeklyGoal
              ? `–û—Å—Ç–∞–ª–æ—Å—å ${stats.weeklyGoal - stats.weeklyWorkouts} —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ –¥–æ —Ü–µ–ª–∏`
              : "–û—Ç–ª–∏—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞! –¶–µ–ª—å –Ω–µ–¥–µ–ª–∏ –¥–æ—Å—Ç–∏–≥–Ω—É—Ç–∞! üéâ"
            }
          </p>
        </div>
      </CardContent>
    </Card>
  );
}